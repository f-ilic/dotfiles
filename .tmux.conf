#=================================================================
#=                      1 BASIC SETUP                            =
#=================================================================

# ----- Additional Prefix Key
set -g prefix2 M-p
bind M-p send-prefix -2

# ----- Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# ----- Fix Mouse Scrolling
set -g mouse on

# Mouse wheel scrolling - works on macOS and provides 1-line precision
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Copy mode scrolling for 1-line precision using -N1 flag
bind -T copy-mode-vi WheelUpPane send -N1 -X scroll-up
bind -T copy-mode-vi WheelDownPane send -N1 -X scroll-down
bind -T copy-mode WheelUpPane send -N1 -X scroll-up
bind -T copy-mode WheelDownPane send -N1 -X scroll-down


# -----# History, message time, etc.
set -g history-limit 50000
set -g display-time 4000

# ----- Terminal environment passthrough
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM
set -ga update-environment DISPLAY
set -ga update-environment WAYLAND_DISPLAY
set -ga update-environment XDG_SESSION_TYPE

#=================================================================
#=                       2 HOTKEYS                                =
#=================================================================

bind r source-file ~/.tmux.conf \; display-message "Tmux config reloaded!"
bind a set-window-option synchronize-panes

# ----- Split panes with v and h
bind v split-window -v
bind h split-window -h

# ----- Zoom pane with return (caps+space)
bind Enter resize-pane -Z

#=================================================================
#=                       2.1 COPY MODE                           =
#=================================================================

# ----- Space to begin selection
bind -T copy-mode Space send -X begin-selection
bind -T copy-mode space send -X begin-selection

# ----- Enter to copy selection and exit copy mode
bind -T copy-mode-vi Enter send -X copy-selection-and-cancel
bind -T copy-mode Enter send -X copy-selection-and-cancel

# ----- Ctrl-a / Ctrl-e navigation
bind -T copy-mode C-a send -X start-of-line
bind -T copy-mode C-e send -X end-of-line

# ----- Mouse selection behavior - don't exit copy mode automatically
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection
bind -T copy-mode MouseDragEnd1Pane send -X copy-selection

# ----- Double-click to select word without exiting copy mode
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-selection
bind -T copy-mode DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-selection

# ----- Triple-click to select line without exiting copy mode  
bind -T copy-mode-vi TripleClick1Pane select-pane \; send -X select-line \; send -X copy-selection
bind -T copy-mode TripleClick1Pane select-pane \; send -X select-line \; send -X copy-selection

# ----- System clipboard integration for remote sessions
# Enable OSC 52 clipboard integration (works over SSH)
set -s set-clipboard on

# Copy to system clipboard using OSC 52 escape sequences (works remotely)
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "printf '\033]52;c;%s\033\\' \$(base64 -w0)"
bind -T copy-mode Enter send -X copy-pipe-and-cancel "printf '\033]52;c;%s\033\\' \$(base64 -w0)"
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe "printf '\033]52;c;%s\033\\' \$(base64 -w0)"
bind -T copy-mode MouseDragEnd1Pane send -X copy-pipe "printf '\033]52;c;%s\033\\' \$(base64 -w0)"

# Fallback to native clipboard tools when available, otherwise use OSC 52
bind -T copy-mode-vi C-c send -X copy-pipe-and-cancel "if command -v pbcopy > /dev/null 2>&1; then pbcopy; elif [ -n \"\$DISPLAY\" ] && command -v xclip > /dev/null 2>&1; then xclip -selection clipboard -i; else printf '\033]52;c;%s\033\\' \$(base64 -w0); fi"

#=================================================================
#=                        3 COSMETICS                            =
#=================================================================

# ----- Status bar settings
set -g status-style "bg=black fg=white"
set -g status-left '[#S] '
set -g status-right '#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}#{?window_zoomed_flag,🔍 [Zoom] ,}#{?pane_marked_set,📌 [Mark] ,}%H:%M %d-%b-%y'
set -g status-justify left
set -g status-position bottom

# ----- Pane border colors to match theme
set -g pane-border-style "fg=gray"
set -g pane-active-border-style "fg=cyan"

# ----- Separator between windows
set-window-option -g window-status-separator ' #[fg=gray]|#[default] '

# ----- Inactive window tabs
setw -g window-status-style "fg=white bg=black"
setw -g window-status-format "#[fg=brightwhite] #I #[fg=white]#W#{?window_zoomed_flag, 🔍,} "

# ----- Active (focused) window tab
setw -g window-status-current-style "fg=black bg=cyan bold"
setw -g window-status-current-format "#[fg=black bg=cyan bold] #I #W#{?window_zoomed_flag, 🔍,} #[default]"

# ----- Optional: bell indicator tab (when there's activity)
setw -g window-status-bell-style "fg=black bg=yellow bold"

# ----- Message popup styling
set -g message-style "fg=black bg=yellow bold"